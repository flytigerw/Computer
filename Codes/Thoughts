1.问题很难
  1)规模化小，给出事例，模拟整个流程
  2)能否使用递归
  3)图形化
  4)从个性到共性，注意边界条件

2.面试时，若遇到简单的问题，则需要更加全面的考虑，包括边界条件，错误处理，特殊情况等等
          若遇到比较难的问题，则应理清思路，先模拟整个过程


3.核心能力
  1)将问题抽象出来用合理的数据结构表示，并找到其中的规律
  2)沟通能力
    软件项目已经告别了单打独斗的年代。
    在于队友沟通时,要观点明确，思路清晰，符合逻辑

4.回溯法
  适用于由多个步骤组成的问题，且每个步骤含有多个选项
  每个步骤都是回溯点.
  若当前走进死胡同，则回溯到过去，重新选择

  动态规划:
  常见于求最优解
  大问题能够分解为子问题(规模小)，且大问题的最优解是子问题最优解的组合
  
  贪婪算法:
  每一步做出最贪婪的选择

5.从三种测试来保证代码的正确性
  1)基本功能测试
  2)边界测试
  3)错误用例测试
