1.通过SUBSCRIBE命令，client可以订阅一个或者多个频道
  每当有client向该频道发送消息时，频道的所有订阅者都会受到消息
  client也可以通过PSUBSCRIBE命令订阅模式 
  订阅者可以收到与模式相匹配的频道的消息
  
  如何实现发布与订阅功能:
  首先，client可以订阅某个频道，多个client可以订阅同一个频道 
  显然可以采用字典来记录频道和订阅者之间的关联
  在redisServer中含有字段:dict* pubsub_channels  ---> KV为 <频道字符串，redisClient*>
  
  频道订阅与退订只需要维护这个字典即可

  其次，client可以订阅模式.
  当client通过PUBLISH向某个频道发送消息时，
  也应该去检查是否有与该频道相匹配的模式，若有，则向改模式的订阅者发送消息

  所以也需要存储 模式和订阅者的关联 
  不能使用字典
  因为需要将 频道与模式进行对比 才能知道模式是否与频道匹配 --> 那么就需要遍历所有的频道 --> 字典的用处不大
  于是就采用双向链表来存储这种关联，每个链表节点结构为: <pattern,redisClient*>
  模式的订阅与退订只需要维护这个字典即可
  
  消息发送:PUBLISH <channel> <message>
  1)在频道字典中，查找到所有订阅了该频道的client，并将message发送之
  2)在模式链表中，查找所有与该频道匹配的模式，将message发送给订阅了该模式的client



