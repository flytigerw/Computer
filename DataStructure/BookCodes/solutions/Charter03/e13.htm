
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in C++<BR>
Chapter 3, Exercise 13<BR>
<BR>
</H1>
If <em class=math>f(n) = Omega(g(n))</em>,
then there exist a positive <em class=math>c</em> and an
<em class=math>n<sub>0</sub></em>
such that <em class=math>g(n)/f(n) &lt;= c</em> for all
<em class=math>n &gt;= n<sub>0</sub></em>.  Hence, the limit of
<em class=math>g(n)/f(n)</em> as <m class=math>n</em> goes to
infinity is <em class=math>&lt;= c</em>.  Next, suppose that
the limit of <em class=math>g(n)/f(n)</em> as <em class=math>n</em>
goes to infinity is <em class=math>&lt;= c</em>.  From
this it follows that there is
an <em class=math>n<sub>0</sub></em> such that <em class=math>g(n)
&lt;= max{1, c} * f(n)</em> for all <em class=math>n &gt;= n<sub>0</sub></em>. 
This proves Theorem 3.4.  Theorems 3.2 and 3.4 together imply Theorem 3.6.

</FONT>
</BODY>
</HTML>
