<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in C++<BR>
Chapter 15, Exercise 1<BR>
<BR>
</H1>


This key sequence represents the worst case for the unbalanced binary search
trees of Chapter 14 because this sequence results
in trees whose height equals the number of elements.
Let's see how AVL trees handle this insert sequence.
<br><br>
We use the node format <code class=var>[balance factor, key]</code>.
The first two inserts result in the following
balanced trees.
<br>
<pre class=figure>
[0, 15]                [1, 15]
                     /
                 [0, 14]
</pre>
Immediately after the insertion of <code class=var>13</code>, we
have the unbalanced tree
<br><pre class=figure>
                [2, 15] A node
               /
         [1, 14] B
        /     
     [0, 13] C
</pre>
The nearest ancestor of the newly inserted node whose balance factor
is <code class=var>+2</code> or <code class=var>-2</code> is
<code class=var>[2, 15]</code>. So this node is the <code class=var>A</code>
node.
The imbalance is an LL imbalance because the new node was inserted into
the left subtree of the left subtree of <code class=var>A</code>.
The tree following an LL rotation is shown below.
<br><pre class=figure>
              [0, 14]
             /       \
         [0, 13]     [0, 15]
</pre>
When <code class=var>12</code> is inserted we get the following balanced tree:
<br><pre class=figure>
              [1, 14]
             /       \
         [1, 13]     [0, 15]
        /              
     [0, 12]
</pre>
The insertion of <code class=var>11</code> gives us the unbalanced tree
<br><pre class=figure>
              [2, 14]
             /       \
       A [2, 13]     [0, 15]
        /              
   B [1, 12]
      /
  C [0, 11]
</pre>
The imbalance type is LL, and following an LL rotation we get the balanced tree
<br><pre class=figure>
              [1, 14]
             /       \
         [0, 12]     [0, 15]
       /       \
   [0, 11]      [0, 13]
</pre>
Following the insertion of <code class=var>10</code> we have the unbalanced tree
<br><pre class=figure>
              [2, 14] A node
             /       \
       B [1, 12]     [0, 15]
       /       \
 C [1, 11]      [0, 13]
     /
   [0, 10]
</pre>
The imbalance type is LL, and following an LL rotation we get the balanced tree
<br><pre class=figure>
              [0, 12]
             /       \
          [1, 11]     [0, 14]
        /             /      \
    [0, 10]       [0, 13]    [0, 15]
</pre>
When <code class=var>9</code> is inserted we get the unbalanced tree
<br><pre class=figure>
              [1, 12]
             /       \
       A  [2, 11]     [0, 14]
        /             /      \
  B [1, 10]       [0, 13]    [0, 15]
      /
 C [0, 9]
</pre>
The imbalance type is LL, and following an LL rotation we get the balanced tree
<br><pre class=figure>
                    [0, 12]
                 /           \
               /              \
             /                 \
         [0, 10]              [0, 14]
        /      \            /       \
    [0, 9]   [0, 11]    [0, 13]     [0, 15]
</pre>
The insertion of <code class=var>8</code> gives us the balanced tree
<br><pre class=figure>
                    [1, 12]
                 /           \
               /              \
             /                 \
         [1, 10]              [0, 14]
        /      \            /       \
    [1, 9]   [0, 11]    [0, 13]     [0, 15]
     /
    [0, 8]
</pre>
The insertion of <code class=var>7</code> gives us the unbalanced tree
<br><pre class=figure>
                    [2, 12]
                 /           \
               /              \
             /                 \
         [2, 10]              [0, 14]
        /      \            /       \
  A [2, 9]   [0, 11]    [0, 13]     [0, 15]
     /
  B [0, 8]
     /
 C [0, 7]
</pre>
The imbalance type is LL, and following an LL rotation we get
<br><pre class=figure>
                    [1, 12]
                 /           \
               /              \
             /                 \
         [1, 10]              [0, 14]
        /      \            /       \
    [0, 8]   [0, 11]    [0, 13]     [0, 15]
    /     \
 [0, 7]   [0, 9]
</pre>
The insertion of <code class=var>6</code> gives us the unbalanced tree
<br><pre class=figure>
                        [2, 12]
                     /           \
                   /              \
                 /                 \
           A [2, 10]              [0, 14]
            /      \            /       \
      B [1, 8]   [0, 11]    [0, 13]     [0, 15]
        /     \
   C [1, 7]   [0, 9]
       /
     [0, 6]
</pre>
The imbalance type is LL, and following an LL rotation we get
<br><pre class=figure>
                    [1, 12]
                 /           \
               /              \
             /                 \
         [0, 8]              [0, 14] 
        /      \            /       \
    [1, 7]     [0, 10]    [0, 13]     [0, 15] 
   /          /      \
[0, 6]     [0, 9]     [0, 11] 
</pre>
The insertion of <code class=var>5</code> gives us the unbalanced tree
<br><pre class=figure>
                        [2, 12]
                     /           \
                   /              \
                 /                 \
             [1, 8]              [0, 14] 
            /      \            /       \
     A [2, 7]     [0, 10]    [0, 13]     [0, 15] 
       /          /      \
  B [1, 6]     [0, 9]     [0, 11] 
      /
  C [0,5]
</pre>
The imbalance type is LL, and following an LL rotation we get
<br><pre class=figure>
                    [1, 12]
                 /           \
               /              \
             /                 \
         [0, 8]              [0, 14] 
        /      \            /       \
    [0, 6]      [0, 10]   [0, 13]  [0, 15]
   /      \     /    \
[0, 5] [0, 7] [0, 9] [0, 11]
</pre>
The insertion of <code class=var>4</code> gives us the unbalanced tree
<br><pre class=figure>
                     A  [2, 12]
                     /           \
                   /              \
                 /                 \
           B [1, 8]              [0, 14] 
            /      \            /       \
      C [1, 6]      [0, 10]   [0, 13]  [0, 15]
       /      \     /    \
    [1, 5] [0, 7] [0, 9] [0, 11]
      /
   [0, 4]
</pre>
The imbalance type is LL, and following an LL rotation we get
<br><pre class=figure>
                               [0, 8]
                            /           \
                           /             \
                     [1, 6]              [0, 12]
                 /          \            /        \
               /             \          /          \
             /                \        /            \
         [1, 5]            [0, 7]   [0, 10]       [0, 14]
        /                           /      \      /      \
    [0, 4]                      [0, 9]  [0, 11] [0, 13]  [0, 15]
</pre>
The insertion of <code class=var>3</code> gives us the unbalanced tree
<br><pre class=figure>
                               [1, 8]
                            /           \
                           /             \
                     [2, 6]              [0, 12]
                 /          \            /        \
               /             \          /          \
             /                \        /            \
       A [2, 5]            [0, 7]   [0, 10]       [0, 14]
        /                           /      \      /      \
  B [1, 4]                      [0, 9]  [0, 11] [0, 13]  [0, 15]
      /
 C [0, 3]
</pre>
The imbalance type is LL, and following an LL rotation we get
<br><pre class=figure>
                               [0, 8]
                            /           \
                           /             \
                     [1, 6]              [0, 12]
                 /          \            /        \
               /             \          /          \
             /                \        /            \
         [0, 4]            [0, 7]   [0, 10]       [0, 14]
        /      \                    /      \      /      \
    [0, 3]   [0, 5]                [0, 9]  [0, 11] [0, 13]  [0, 15]
</pre>
The insertion of <code class=var>2</code> gives us the unbalanced tree
<br><pre class=figure>
                               [1, 8]
                            /           \
                           /             \
                   A [2, 6]              [0, 12]
                 /          \            /        \
               /             \          /          \
             /                \        /            \
       B [1, 4]            [0, 7]   [0, 10]       [0, 14]
        /      \                    /      \      /      \
  C [1, 3]   [0, 5]                [0, 9]  [0, 11] [0, 13]  [0, 15]
      /
   [0, 2]
</pre>
The imbalance type is LL, and following an LL rotation we get
<br><pre class=figure>
                               [0, 8]
                            /           \
                           /             \
                     [0, 4]              [0, 12]
                 /          \            /       \
               /             \          /          \
             /                \        /            \
         [1, 3]           [0, 6]      [0, 10]       [0, 14]
         /               /      \    /       \      /      \
     [0, 2]        [0, 5]   [0, 7] [0, 9] [0, 11]  [0, 13] [0, 15]
</pre>
The insertion of <code class=var>1</code> gives us the unbalanced tree
<br><pre class=figure>
                               [1, 8]
                            /           \
                           /             \
                     [1, 4]              [0, 12]
                 /          \            /       \
               /             \          /          \
             /                \        /            \
       A [2, 3]           [0, 6]      [0, 10]       [0, 14]
         /               /      \    /       \      /      \
   B [1, 2]        [0, 5]   [0, 7] [0, 9] [0, 11]  [0, 13] [0, 15]
      /
   C [0, 1]
</pre>
The imbalance type is LL, and following an LL rotation we get
<br><pre class=figure>
                               [0, 8]
                            /           \
                           /             \
                     [0, 4]              [0, 12]
                 /          \            /       \
               /             \          /          \
             /                \        /            \
         [0, 2]           [0, 6]      [0, 10]       [0, 14]
        /      \         /      \    /       \      /      \
    [0, 1] [0, 3]  [0, 5]   [0, 7] [0, 9] [0, 11]  [0, 13] [0, 15]
</pre>
As you can see, we get minimum height binary trees!

</FONT>
</BODY>
</HTML>
