
<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in C++<BR>
Chapter 17, Exercise 15<BR>
<BR>
</H1>


Consider any instance of the 0/1 knapsack problem.
Let <code class=var>O</code>
be the set of objects packed into the knapsack
in some optimal solution and
let <code class=var>PO</code> be the profit earned by this solution.
Let <code class=var>PB</code> be the profit earned by the
bounded-performance solution.
If <code class=var>O</code> has fewer than two objects,
the bounded-performance solution
must also be optimal as the bounded-performance agorithm
tries all single object packings.
So, assume that <code class=var>O</code> has more than one object.
Let <code class=var>i</code> denote the object in <code class=var>O</code>
that has maximum profit.
The profit of any other object <code class=var>j</code> in <code class=var>O</code>
is <code class=var>&lt;= PO/2</code> (otherwise, <code class=var>p<sub>i</sub> +
p<sub>j</sub> > PO</code>).
<br><br>
Consider the time the bounded-performance heuristic starts
by putting object <code class=var>i</code> into the knapsack.
Let <code class=var>B</code> denote the objects
that are packed into the knapsack at this time.
Let <code class=var>s</code> be the object with highest profit density
that is in <code class=var>O</code> but not
in <code class=var>B</code>.  If there is no such object, <code class=var>B</code>
must also be an optimal solution and the error bound is established.
<br><br>
Let <code class=var>CB</code> be the capacity used by objects other than
<code class=var>i</code> packed into the knapsack before object <code class=var>s</code>
is excluded by the greedy method.  In both <code class=var>O</code> and
<code class=var>B</code> this capacity is packed by the same objects and so earns
the same profit.  When object <code class=var>s</code> is excluded by the
greedy packing, the
available capacity is less than <code class=var>w<sub>s</sub></code>
and is filled in the optimal solution by objects with profit density
no more than
<code class=var>p<sub>s</sub>/w<sub>s</sub></code>.  So the additional profit
generated by <code class=var>O</code> is less than
<code class=var>p<sub>s</sub></code>, which is no more than
<code class=var>PO/2</code>.
<br><br>
Consequently, <code class=var>PO - PB < PO/2</code> and
<code class=var>(PO - PB)/PO < 1/2</code>.


</FONT>
</BODY>
</HTML>
