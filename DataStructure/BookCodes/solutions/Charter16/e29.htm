<HTML>
<HEAD>
<LINK rel="stylesheet" href="../exer.css">
</HEAD>
<BODY>
<H1>
Data Structures, Algorithms, & Applications in C++<BR>
Chapter 16, Exercise 29<BR>
<BR>
</H1>

For array adjacency-lists, assume that 
the <code class=var>length</code> field
of each of the <code class=var>n + 1</code> arrays
that make up a two-dimensional <code class=var>n x n</code> array
is of type
<code class=code>int</code> and that each
<code class=code>int</code> is <code class=math>32</code> bits.
The space needed for <code class=code>aList</code> is
<code class=var>32(n + 1 + e)</code> bits.
<br><br>

When the adjacency matrix is represented using one
<code class=code>boolean</code>
for each entry, the space needed is <code class = var>n<sup>2</sup></code>
bits.  In this case, the adjacency matrix uses less space provided
<code class=var>e &gt; n<sup>2</sup>/32 - n - 1</code>.


</FONT>
</BODY>
</HTML>
