

题目描述:
 长度为N的绳子可以切成M段
 先求M段的最大乘积
 比如N=8时
 可以切成3段:2,3,3
 最大乘积为18

解题思路:
 最优化问题优先考虑动态规划
 问题方程:f(N) ---> 长度为N的绳子切割后,各段乘积的最大值

 考虑子问题
   f(N)与f(N-1)的关系 ???
   长度为N的切割方案可以怎样分解
 比如:
   f(5) = max{f(4),2f(3),3f(2),4(f1)}
   f(4) = max{f(3),2f(2),3(f1)}
   f(3) = max{f(2),2f(1)}
   f(2) = 2
   f(1) = 1
 自底向上迭代
 由于f(5)需要f(4),f(3),f(2),f(1)的值 ----> 用数组存储历来的中间值
